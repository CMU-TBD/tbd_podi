<?xml version="1.0"?>

<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Right/Left Hubcap + Wheel -->
  <xacro:macro name="p3dx_wheel" params="tf_suffix suffix reflect parent">

    <link name="${tf_suffix}_wheel">
      <xacro:hollow_cylinder_inertial radius="0.09" inner_radius="0.05" length="0.04" mass="1" />
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <!-- The wheel isn't a perfect cylinder. -->
        <!-- Radius: 0.09, inner radius:0.05, length:0.04 -->
        <geometry name="pioneer_geom">
          <mesh filename="package://tbd_podi_description/meshes/p3dx_meshes/${suffix}_wheel.stl"/>
        </geometry>
        <material name="WheelBlack">
          <color rgba="0.117 0.117 0.117 1"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${-3.1415927/2} 0 0"/>
        <geometry>
          <cylinder radius="0.09" length="0.04"/>
        </geometry>
      </collision>
    </link>

    <joint name="${tf_suffix}_hubcap_joint" type="fixed">
      <!--<origin xyz="0 ${reflect*0.158} 0.091" rpy="0 0 0"/>-->
      <origin xyz="0 0 0" rpy="0 0 0"/>

      <parent link="${tf_suffix}_wheel"/>
      <child link="${tf_suffix}_hubcap"/>
    </joint>

    <link name="${tf_suffix}_hubcap">
      <!-- It's a big hard to model the exact inertia, so let's ignore it here. -->
      <inertial>
        <mass value="0.00"/>
        <origin xyz="0 0 0"/>
        <inertia ixx="0.012411765597" ixy="0" ixz="0" iyy="0.015218160428" iyz="0" izz="0.011763977943"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <!-- It is actually two disk shape object on both side of the wheel -->
        <geometry name="pioneer_geom">
          <mesh filename="package://tbd_podi_description/meshes/p3dx_meshes/${suffix}_hubcap.stl"/>
        </geometry>
        <material name="HubcapYellow">
          <color rgba="1.0 0.811 0.151 1.0"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="0.05" length="0.03"/>
        </geometry>
      </collision>
    </link>

    <!-- Parent to the wheel -->
    <joint name="${tf_suffix}_wheel_joint" type="continuous">
      <axis xyz="0 1 0"/>
      <origin xyz="0 ${reflect*0.158} 0.091" rpy="0 0 0"/>
      <parent link="${parent}"/>
      <child link="${tf_suffix}_wheel"/>
    </joint>

    <!-- Transmission variable for gazebo -->
    <!-- This is commented out because it is used by gazebo_ros_controller, it will superseed
    the internal wheel controller if set
    <transmission type="pr2_mechanism_model/SimpleTransmission" name="${tf_suffix}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${tf_suffix}_wheel_motor">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        <mechanicalReduction>${reflect * 624/35 * 80/19}</mechanicalReduction>
      </actuator>
      <joint name="${tf_suffix}_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission> -->

    <gazebo reference="${tf_suffix}_hubcap">
      <material value="Gazebo/Yellow"/>
    </gazebo>


    <gazebo reference="${tf_suffix}_wheel">
      <material value="Gazebo/Black"/>
      <elem key="mu1" value="200.0" />
      <elem key="mu2" value="100.0" />
      <elem key="kp" value="10000000.0" />
      <elem key="kd" value="1.0" />
    </gazebo>

  </xacro:macro>


</robot>

