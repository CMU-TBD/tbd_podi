<launch>
	<arg name="robot_name" default="podi" />
	<arg name="launch_rviz" default="false" />
	<arg name="rviz_config_path" default="$(find tbd_podi_common)/rviz/podi_default.rviz" />
	<arg name="rosaria_port" default="/dev/ttyUSB0"/>
	<arg name="rosaria_publish_lasers" default="false"/>
	<arg name="joystick_device_path" default="/dev/input/js0"/>
	<arg name="rosbag_recording_base_path" default="$(find tbd_podi_common)/bagfiles/"/>
	<arg name="playback_rosbag_path" default=""/>
	<arg name="xacro" default="$(find tbd_podi_description)/urdf/podi.urdf.xacro"/>
	<arg name="joint_publish_list" default="[/podi/handle_state]"/>
	<arg name="sim" default="false"/>
	<arg name="use_joy" default="true" />
	<arg name="enabling_switch" default="true" />
	<arg name="motor_topic_name" default="/RosAria/cmd_vel" />
	<arg name="nav_topic_name" default="nav_cmd_vel" />
	<arg name="laser_topic_name" default="$(arg robot_name)/laser" />
	<arg name="output" default="screen" />

	<!-- Launch ROSARIA, which communicates with the P3DX Base -->
	<node pkg = "rosaria" type = "RosAria" name = "RosAria" output="$(arg output)" unless="$(arg sim)">
		<param name="port" value="$(arg rosaria_port)" type="string"/>
		<param name="base_link_frame" value="$(arg robot_name)_base_link" type="string"/>
		<param name="odom_frame" value="$(arg robot_name)_odom" type="string"/>
		<param name="laser_frame" value="$(arg robot_name)_laser_scanner" type="string"/>
		<param name="publish_aria_lasers" value="$(arg rosaria_publish_lasers)" type="bool"/>
		<remap from="/RosAria/lms1xx_1_laserscan" to="$(arg laser_topic_name)" />
	</node>

	<!-- Launch the accompany nodes -->
	<group ns="$(arg robot_name)">

		<!-- Launch the node that will send velocity commands to actuators -->
		<node pkg="tbd_podi_common" type="control_robot" name="robot_controller" output="$(arg output)">
			<param name="rosbag_recording_base_path" value="$(arg rosbag_recording_base_path)" type="string"/>
			<param name="playback_rosbag_path" value="$(arg playback_rosbag_path)"/>
			<param name="control_loop_rate" value="100.0"/>
			<param name="proportional_gain_factor" value="0.90"/>
			<param name="enabling_switch" value="$(arg enabling_switch)"/>
			<param name="sim" value="$(arg sim)"/>
			<remap from="output_cmd_vel" to="$(arg motor_topic_name)"/>
			<remap from="cmd_vel" to="$(arg nav_topic_name)"/>
			<remap from="enable_motors" to="/RosAria/enable_motors"/>
			<remap from="disable_motors" to="/RosAria/disable_motors"/>
		</node>

		<!-- Launch the joystick node -->
		<node pkg="joy" type="joy_node" name="joy_node" respawn="true" if="$(arg use_joy)" output="$(arg output)">
			<param name="dev" value="$(arg joystick_device_path)" type="string"/>
			<param name="autorepeat_rate" value="10" type="int" />
		</node>

		<!-- Start the P3DX's URDF broadcaster, so the appropriate TF tree is published -->
		<param name="robot_description" 
			command="$(find xacro)/xacro $(arg xacro)
					robot_name:=$(arg robot_name)" 
		/>

		<!-- Launch the node that monitors the handle height and rotation -->
		<node pkg="tbd_podi_common" type="handle_state_node.py" name="handle_state_node" output="$(arg output)" unless="$(arg sim)">
		</node>

		<!-- Launch the node that monitors computer's battery health -->
		<node pkg="tbd_podi_common" type="computer_state_node.py" name="computer_state_node" output="$(arg output)" unless="$(arg sim)" />
		
		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
			<rosparam param="source_list" subst_value="True">$(arg joint_publish_list)</rosparam>
		</node>

		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="$(arg output)">
		</node>

	</group>


	<node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_config_path)" required="true" if="$(arg launch_rviz)"/>

</launch>
